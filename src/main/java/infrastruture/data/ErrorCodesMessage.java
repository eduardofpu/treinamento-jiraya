package infrastruture.data;

public class ErrorCodesMessage {
    public static final ErrorCode GENERIC_ERROR = new ErrorCode(MessageCodes.GENERIC_ERROR);
    public static final ErrorCode FIELD_VALIDATION_REQUIRED = new ErrorCode(MessageCodes.FIELD_VALIDATION_REQUIRED);
    public static final ErrorCode ACCEPT_TERMS_VALIDATION = new ErrorCode(MessageCodes.ACCEPT_TERMS_VALIDATION);
    public static final ErrorCode FIELD_VALIDATION_INVALID = new ErrorCode(MessageCodes.FIELD_VALIDATION_INVALID);
    public static final ErrorCode REQUEST_FIELDS_VALIDATION = new ErrorCode(MessageCodes.REQUEST_FIELDS_VALIDATION);
    public static final ErrorCode AUTH_ERROR = new ErrorCode(MessageCodes.AUTH_ERROR);
    public static final ErrorCode UNSUPORTED_OPERATION = new ErrorCode(MessageCodes.UNSUPORTED_OPERATION);
    public static final ErrorCode BUREAU_ERROR = new ErrorCode(MessageCodes.BUREAU_ERROR);
    public static final ErrorCode ERROR_FETCHING_CUSTOMER_DATA = new ErrorCode(MessageCodes.ERROR_FETCHING_CUSTOMER_DATA);
    public static final ErrorCode INVALID_DATE_FORMAT = new ErrorCode(MessageCodes.INVALID_DATE_FORMAT);
    public static final ErrorCode CUSTOMER_NOT_FOUND = new ErrorCode(MessageCodes.CUSTOMER_NOT_FOUND);
    public static final ErrorCode CONFIGURATION_PROPERTIES_NOT_FOUND = new ErrorCode(MessageCodes.CONFIGURATION_PROPERTIES_NOT_FOUND);
    public static final ErrorCode CUSTOMER_NOT_INFORMED = new ErrorCode(MessageCodes.CUSTOMER_NOT_INFORMED);
    public static final ErrorCode CUSTOMER_WITHOUT_INVITATIONS = new ErrorCode(MessageCodes.CUSTOMER_WITHOUT_INVITATIONS);
    public static final ErrorCode CUSTOMERS_ARE_DIVERGENTS = new ErrorCode(MessageCodes.CUSTOMERS_ARE_DIVERGENTS);
    public static final ErrorCode CUSTOMER_WITH_ACTIVE_CONTRACT = new ErrorCode(MessageCodes.CUSTOMER_WITH_ACTIVE_CONTRACT);
    public static final ErrorCode BSCS_CUSTOMER_NOT_FOUND = new ErrorCode(MessageCodes.BSCS_CUSTOMER_NOT_FOUND);
    public static final ErrorCode TRANSACTION_NOT_FOUND = new ErrorCode(MessageCodes.TRANSACTION_NOT_FOUND);
    public static final ErrorCode CUSTOMER_ALREADY_EXISTS = new ErrorCode(MessageCodes.CUSTOMER_ALREADY_EXISTS);
    public static final ErrorCode CREDENTIAL_ALREADY_EXISTS = new ErrorCode(MessageCodes.CREDENTIAL_ALREADY_EXISTS);
    public static final ErrorCode EMAIL_ALREADY_EXISTS = new ErrorCode(MessageCodes.EMAIL_ALREADY_EXISTS);
    public static final ErrorCode AREA_CODE_INVALID = new ErrorCode(MessageCodes.AREA_CODE_INVALID, 30);
    public static final ErrorCode INTEGRATION_ERROR = new ErrorCode(MessageCodes.INTEGRATION_ERROR, 50);
    public static final ErrorCode INVALID_LOGIN_PASSWORD = new ErrorCode(MessageCodes.INVALID_LOGIN_PASSWORD);
    public static final ErrorCode INVALID_LOGIN_INACTIVE = new ErrorCode(MessageCodes.INVALID_LOGIN_INACTIVE);
    public static final ErrorCode INVALID_LOGIN_USER = new ErrorCode(MessageCodes.INVALID_LOGIN_USER);
    public static final ErrorCode INVALID_MSISDN = new ErrorCode(MessageCodes.INVALID_MSISDN);
    public static final ErrorCode INVALID_PROFILE = new ErrorCode(MessageCodes.INVALID_PROFILE);
    public static final ErrorCode MSISDN_REQUIRED = new ErrorCode(MessageCodes.MSISDN_REQUIRED);
    public static final ErrorCode MSISDN_REQUIRED_SMS = new ErrorCode(MessageCodes.MSISDN_REQUIRED_SMS);
    public static final ErrorCode OFFER_INVALID = new ErrorCode(MessageCodes.OFFER_INVALID);
    public static final ErrorCode OTHER_CARRIER = new ErrorCode(MessageCodes.OTHER_CARRIER);
    public static final ErrorCode ELIGIBLE = new ErrorCode(MessageCodes.ELIGIBLE);
    public static final ErrorCode CREDENTIAL_INVALID = new ErrorCode(MessageCodes.CREDENTIAL_INVALID);
    public static final ErrorCode CREDENTIAL_NOT_CUSTOMER = new ErrorCode(MessageCodes.CREDENTIAL_NOT_CUSTOMER);
    public static final ErrorCode NOT_ELIGIBLE = new ErrorCode(MessageCodes.NOT_ELIGIBLE);
    public static final ErrorCode CHIP_OK_NOT_DIGITAL = new ErrorCode(MessageCodes.CHIP_OK_NOT_DIGITAL);
    public static final ErrorCode CHIP_EXCHANGE_ALREADY_EXISTS = new ErrorCode(MessageCodes.CHIP_EXCHANGE_ALREADY_EXISTS);
    public static final ErrorCode CHIP_EXCHANGE_PENDING_OR_PROCESSING_EXISTS = new ErrorCode(MessageCodes.CHIP_EXCHANGE_PENDING_OR_PROCESSING_EXISTS);
    public static final ErrorCode NOT_LOYALITY = new ErrorCode(MessageCodes.NOT_LOYALITY);
    public static final ErrorCode DOCUMENT_TYPE_CNPJ_NOT_SUPPORTED = new ErrorCode(MessageCodes.DOCUMENT_TYPE_CNPJ_NOT_SUPPORTED);
    public static final ErrorCode DOCUMENT_SITUATION_NOT_ALLOWED = new ErrorCode(MessageCodes.DOCUMENT_SITUATION_NOT_ALLOWED);
    public static final ErrorCode CUSTOMER_SAVE_ERROR = new ErrorCode(MessageCodes.CUSTOMER_SAVE_ERROR);
    public static final ErrorCode SUBSCRIBER_SAVE_ERROR = new ErrorCode(MessageCodes.SUBSCRIBER_SAVE_ERROR);
    public static final ErrorCode PORT_REQUEST_NOT_EXISTS = new ErrorCode(MessageCodes.PORT_REQUEST_NOT_EXISTS);
    public static final ErrorCode PORT_REQUEST_ALREADY_EXISTS = new ErrorCode(MessageCodes.PORT_REQUEST_ALREADY_EXISTS);
    public static final ErrorCode PORT_REQUEST_EXISTS = new ErrorCode(MessageCodes.PORT_REQUEST_EXISTS);
    public static final ErrorCode PORT_CANNOT_BE_CANCELLED = new ErrorCode(MessageCodes.PORT_CANNOT_BE_CANCELLED);
    public static final ErrorCode LINE_NOT_DIGITAL = new ErrorCode(MessageCodes.LINE_NOT_DIGITAL);
    public static final ErrorCode LINE_NOT_PRE = new ErrorCode(MessageCodes.LINE_NOT_PRE);
    public static final ErrorCode NO_CONTRACT = new ErrorCode(MessageCodes.NO_CONTRACT);
    public static final ErrorCode CONTRACT_NOT_FOUND = new ErrorCode(MessageCodes.CONTRACT_NOT_FOUND);
    public static final ErrorCode CUSTOMER_WITHOUT_CREDENTIALS = new ErrorCode(MessageCodes.CUSTOMER_WITHOUT_CREDENTIALS);
    public static final ErrorCode PROTOCOL_INVALID = new ErrorCode(MessageCodes.PROTOCOL_INVALID);
    public static final ErrorCode PROTOCOL_CLOSED = new ErrorCode(MessageCodes.PROTOCOL_CLOSED);
    public static final ErrorCode PROTOCOL_QUERY_PARAMS_MISSING = new ErrorCode(MessageCodes.PROTOCOL_QUERY_PARAMS_MISSING);
    public static final ErrorCode INVALID_TELECOM = new ErrorCode(MessageCodes.INVALID_TELECOM);
    public static final ErrorCode TICKET_NOT_FOUND = new ErrorCode(MessageCodes.TICKET_NOT_FOUND);
    public static final ErrorCode TICKET_ALREADY_CLOSED = new ErrorCode(MessageCodes.TICKET_ALREADY_CLOSED);
    public static final ErrorCode TICKET_CUSTOMER_REQUIRED = new ErrorCode(MessageCodes.TICKET_CUSTOMER_REQUIRED);
    public static final ErrorCode CLOSED_OFFER = new ErrorCode(MessageCodes.CLOSED_OFFER);
    public static final ErrorCode PAYMENT_NOT_PROCESSED = new ErrorCode(MessageCodes.PAYMENT_NOT_PROCESSED);
    public static final ErrorCode PAYMENT_NOT_APPROVED = new ErrorCode(MessageCodes.PAYMENT_NOT_APPROVED);
    public static final ErrorCode MAIN_PAYMENT_NOT_CREDIT_CARD = new ErrorCode(MessageCodes.MAIN_PAYMENT_NOT_CREDIT_CARD);
    public static final ErrorCode CONTRACT_SUSPENDED = new ErrorCode(MessageCodes.CONTRACT_SUSPENDED);
    public static final ErrorCode ADDRESS_NOT_FOUND = new ErrorCode(MessageCodes.ADDRESS_NOT_FOUND);
    public static final ErrorCode ADDRESS_NUMBER = new ErrorCode(MessageCodes.ADDRESS_NUMBER);
    public static final ErrorCode LOGIN_INCONSISTENT = new ErrorCode(MessageCodes.LOGIN_INCONSISTENT);
    public static final ErrorCode PASSWORD_INCONSISTENT = new ErrorCode(MessageCodes.PASSWORD_INCONSISTENT);
    public static final ErrorCode LOGIN_NOT_UNIQUE = new ErrorCode(MessageCodes.LOGIN_NOT_UNIQUE);
    public static final ErrorCode PASSWORD_OLD = new ErrorCode(MessageCodes.PASSWORD_OLD);
    public static final ErrorCode INVALID_PASSWORD = new ErrorCode(MessageCodes.INVALID_PASSWORD);
    public static final ErrorCode ADH_CHIP_WITH_CREDIT_CARD_ONLY = new ErrorCode(MessageCodes.ADH_CHIP_WITH_CREDIT_CARD_ONLY);
    public static final ErrorCode FORGOT_PASSWORD_LOGIN_NOT_FOUND = new ErrorCode(MessageCodes.FORGOT_PASSWORD_LOGIN_NOT_FOUND);
    public static final ErrorCode NEW_PASSWORD_LOGIN_NOT_FOUND = new ErrorCode(MessageCodes.NEW_PASSWORD_LOGIN_NOT_FOUND);
    public static final ErrorCode FORGOT_PASSWORD_INVALID_TOKEN = new ErrorCode(MessageCodes.FORGOT_PASSWORD_INVALID_TOKEN);
    public static final ErrorCode FORGOT_PASSWORD_EXPIRED_TOKEN = new ErrorCode(MessageCodes.FORGOT_PASSWORD_EXPIRED_TOKEN);
    public static final ErrorCode FORGOT_PASSWORD_CONTRACT_INACTIVE = new ErrorCode(MessageCodes.FORGOT_PASSWORD_CONTRACT_INACTIVE);
    public static final ErrorCode BILLING_CHA_113 = new ErrorCode(MessageCodes.BILLING_CHA_113);
    public static final ErrorCode BILLING_312 = new ErrorCode(MessageCodes.BILLING_312);
    public static final ErrorCode BILLING_CHA_146 = new ErrorCode(MessageCodes.BILLING_CHA_146);
    public static final ErrorCode BILLING_CHA_147 = new ErrorCode(MessageCodes.BILLING_CHA_147);
    public static final ErrorCode BILLING_CHA_151 = new ErrorCode(MessageCodes.BILLING_CHA_151);
    public static final ErrorCode BILLING_CHA_152 = new ErrorCode(MessageCodes.BILLING_CHA_152);
    public static final ErrorCode BILLING_CHA_128 = new ErrorCode(MessageCodes.BILLING_CHA_128);
    public static final ErrorCode BILLING_CHA_120 = new ErrorCode(MessageCodes.BILLING_CHA_120);
    public static final ErrorCode BILLING_CHA_162 = new ErrorCode(MessageCodes.BILLING_CHA_162);
    public static final ErrorCode LOCKER_ERROR = new ErrorCode(MessageCodes.LOCKER_ERROR);
    public static final ErrorCode ADHERENCE_LOCKED = new ErrorCode(MessageCodes.ADHERENCE_LOCKED);
    public static final ErrorCode PURCHASE_LOCKED = new ErrorCode(MessageCodes.PURCHASE_LOCKED);
    public static final ErrorCode CANCELLATION_LOCKED = new ErrorCode(MessageCodes.CANCELLATION_LOCKED);
    public static final ErrorCode BONUS_CONQUEST_NOT_FOUND = new ErrorCode(MessageCodes.BONUS_CONQUEST_NOT_FOUND);
    public static final ErrorCode BONUS_CONQUEST_LIFETIME_RANGE_INVALID = new ErrorCode(MessageCodes.BONUS_CONQUEST_LIFETIME_RANGE_INVALID);
    public static final ErrorCode PROTOCOL_NOT_FOUND = new ErrorCode(MessageCodes.PROTOCOL_NOT_FOUND);
    public static final ErrorCode VALIDATE_CHIP = new ErrorCode(MessageCodes.VALIDATE_CHIP);
    public static final ErrorCode ORDER_CHIP_NOT_FOUND = new ErrorCode(MessageCodes.ORDER_CHIP_NOT_FOUND);
    public static final ErrorCode OFFER_ALREADY_SIGNED = new ErrorCode(MessageCodes.OFFER_ALREADY_SIGNED);
    public static final ErrorCode URA_OFFER_ALREADY_SELECTED = new ErrorCode(MessageCodes.URA_OFFER_ALREADY_SELECTED);
    public static final ErrorCode LINE_NOT_FOUND = new ErrorCode(MessageCodes.LINE_NOT_FOUND);
    public static final ErrorCode LINE_NOT_FOUND_FOR_CUSTOMER = new ErrorCode(MessageCodes.LINE_NOT_FOUND_FOR_CUSTOMER);
    public static final ErrorCode LINE_ACTIVATION_ERROR_EXISTING_PENDING_PROCESS = new ErrorCode(MessageCodes.LINE_ACTIVATION_ERROR_EXISTING_PENDING_PROCESS);
    public static final ErrorCode CUSTOM_PLAN_NOT_FOUND = new ErrorCode(MessageCodes.CUSTOM_PLAN_NOT_FOUND);
    public static final ErrorCode PENDING_ORDER = new ErrorCode(MessageCodes.PENDING_ORDER);
    public static final ErrorCode PENDING_ORDER_DUPLICATED = new ErrorCode(MessageCodes.PENDING_ORDER_DUPLICATED);
    public static final ErrorCode PORTIN_LINES_EQUALS = new ErrorCode(MessageCodes.LINE_NOT_FOUND);
    public static final ErrorCode NO_OFFER_SUPPLIED = new ErrorCode(MessageCodes.NO_OFFER_SUPPLIED);
    public static final ErrorCode INVALID_CONTESTATION_HASH = new ErrorCode(MessageCodes.INVALID_CONTESTATION_HASH);
    public static final ErrorCode COUPON_NOT_FOUND = new ErrorCode(MessageCodes.COUPON_NOT_FOUND);
    public static final ErrorCode COUPON_EXPIRED = new ErrorCode(MessageCodes.COUPON_EXPIRED);
    public static final ErrorCode COUPON_HAS_ORDER = new ErrorCode(MessageCodes.COUPON_HAS_ORDER);
    public static final ErrorCode COUPON_GRATER_THAN_ORDER = new ErrorCode(MessageCodes.COUPON_GRATER_THAN_ORDER);
    public static final ErrorCode ADDON_ORDER_REFFIL_INVALID = new ErrorCode(MessageCodes.ADDON_ORDER_REFFIL_INVALID);
    public static final ErrorCode ADDON_ORDER_MIN_ORDER_INVALID = new ErrorCode(MessageCodes.ADDON_ORDER_MIN_ORDER_INVALID);
    public static final ErrorCode CONSUMPTION_MSISDN_DOES_NOT_BELONG_CUSTOMER = new ErrorCode(MessageCodes.CONSUMPTION_MSISDN_DOES_NOT_BELONG_CUSTOMER);
    public static final ErrorCode CONTESTATION_ALREADY_EXISTS = new ErrorCode(MessageCodes.CONTESTATION_ALREADY_EXISTS);
    public static final ErrorCode CONTESTATION_ALREADY_GRANTED = new ErrorCode(MessageCodes.CONTESTATION_ALREADY_GRANTED);
    public static final ErrorCode CONTESTATION_NOT_FOUND = new ErrorCode(MessageCodes.CONTESTATION_NOT_FOUND);
    public static final ErrorCode SUSPENSION_DAY_INVALID = new ErrorCode(MessageCodes.SUSPENSION_DAY_INVALID);
    public static final ErrorCode SUSPENSION_ALREADY_IN_INTERVAL = new ErrorCode(MessageCodes.SUSPENSION_ALREADY_IN_INTERVAL);
    public static final ErrorCode CHIP_OFFER_NOT_FOUND = new ErrorCode(MessageCodes.CHIP_OFFER_NOT_FOUND);
    public static final ErrorCode MAXIMUM_SUBSCRIBERS_BY_CPF_HIT = new ErrorCode(MessageCodes.MAXIMUM_SUBSCRIBERS_BY_CPF_HIT);
    public static final ErrorCode CPF_NOT_FOUND = new ErrorCode(MessageCodes.CPF_NOT_FOUND);
    public static final ErrorCode CPF_NOT_VALID = new ErrorCode(MessageCodes.CPF_NOT_VALID);
    public static final ErrorCode INVALID_CPF = new ErrorCode(MessageCodes.INVALID_CPF);
    public static final ErrorCode EXTRACT_ERROR = new ErrorCode(MessageCodes.EXTRACT_ERROR);
    public static final ErrorCode SUBSCRIBER_NOT_FOUND = new ErrorCode(MessageCodes.SUBSCRIBER_NOT_FOUND);
    public static final ErrorCode MAIN_CREDIT_CARD_NOT_FOUND = new ErrorCode(MessageCodes.MAIN_CREDIT_CARD_NOT_FOUND);
    public static final ErrorCode CREDIT_CARD_NOT_FOUND = new ErrorCode(MessageCodes.CREDIT_CARD_NOT_FOUND);
    public static final ErrorCode REQUEST_PROCESSING = new ErrorCode(MessageCodes.REQUEST_PROCESSING);
    public static final ErrorCode PRODUCT_NOT_FOUND = new ErrorCode(MessageCodes.PRODUCT_NOT_FOUND);
    public static final ErrorCode INVALID_ICCID = new ErrorCode(MessageCodes.INVALID_ICCID);
    public static final ErrorCode ICCID_NOT_INFORMED = new ErrorCode(MessageCodes.ICCID_NOT_INFORMED);
    public static final ErrorCode PORT_IN_REQUEST_ERROR = new ErrorCode(MessageCodes.PORT_IN_REQUEST_ERROR);
    public static final ErrorCode PORT_IN_REQUEST_ALREADY_EXISTS_FOR_NUMBER_TEMP = new ErrorCode(MessageCodes.PORT_IN_REQUEST_ALREADY_EXISTS_FOR_NUMBER_TEMP);
    public static final ErrorCode PORT_IN_REQUEST_ALREADY_EXISTS_FOR_NUMBER = new ErrorCode(MessageCodes.PORT_IN_REQUEST_ALREADY_EXISTS_FOR_NUMBER);
    public static final ErrorCode PORT_IN_REQUEST_RETRIES_EXCEEDED = new ErrorCode(MessageCodes.PORT_IN_REQUEST_RETRIES_EXCEEDED);
    public static final ErrorCode LINE_INACTIVE = new ErrorCode(MessageCodes.LINE_INACTIVE);
    public static final ErrorCode INVALID_PASSWORD_VALUE = new ErrorCode(MessageCodes.INVALID_PASSWORD_VALUE);
    public static final ErrorCode CHIP_NOT_SUPPORTED = new ErrorCode(MessageCodes.CHIP_NOT_SUPPORTED);
    public static final ErrorCode INVITATION_TOKEN_GENERATE_FAIL = new ErrorCode(MessageCodes.INVITATION_TOKEN_GENERATE_FAIL);
    public static final ErrorCode BONUS_MGM_NOT_FOUND = new ErrorCode(MessageCodes.BONUS_MGM_NOT_FOUND);
    public static final ErrorCode BONUS_MGM_TOKEN_ALREADY_EXISTS = new ErrorCode(MessageCodes.BONUS_MGM_TOKEN_ALREADY_EXISTS);
    public static final ErrorCode BONUS_MGM_TOKEN_NOT_FOUND = new ErrorCode(MessageCodes.BONUS_MGM_TOKEN_NOT_FOUND);
    public static final ErrorCode ORDER_UNSUPPORTED_BONUS_TYPE = new ErrorCode(MessageCodes.PENDING_ORDER);
    //Usados pelo módulo Nextel - Não apague por favor!
    public static final ErrorCode DOCUMENT_FILE_NOT_FOUND = new ErrorCode(MessageCodes.DOCUMENT_FILE_NOT_FOUND);
    public static final ErrorCode INVALID_CEP = new ErrorCode(MessageCodes.INVALID_CEP);
    public static final ErrorCode ZIP_CODE_NOT_FOUND = new ErrorCode(MessageCodes.ZIP_CODE_NOT_FOUND);
    public static final ErrorCode ZIP_CODE_IN_BLACK_LIST = new ErrorCode(MessageCodes.ZIP_CODE_IN_BLACK_LIST);
    public static final ErrorCode CUSTOMER_INVALID_DOCUMENT = new ErrorCode(MessageCodes.CUSTOMER_INVALID_DOCUMENT);
    public static final ErrorCode PURCHASE_IN_PROCESS = new ErrorCode(MessageCodes.PURCHASE_IN_PROCESS);
    public static final ErrorCode INVALID_TRANSACTION_VALUE = new ErrorCode(MessageCodes.INVALID_TRANSACTION_VALUE);
    public static final ErrorCode VALIDATE_ADDRESS = new ErrorCode(MessageCodes.VALIDATE_ADDRESS);
    public static final ErrorCode INVALID_ADDRESS = new ErrorCode(MessageCodes.INVALID_ADDRESS);
    public static final ErrorCode CHANGE_EMAIL_LOGIN_NOT_FOUND = new ErrorCode(MessageCodes.CHANGE_EMAIL_LOGIN_NOT_FOUND);
    public static final ErrorCode CHANGE_EMAIL_INVALID_TOKEN = new ErrorCode(MessageCodes.CHANGE_EMAIL_INVALID_TOKEN);
    public static final ErrorCode CHANGE_EMAIL_WITH_CHIP_DELIVERY_AND_ACTIVATION = new ErrorCode(MessageCodes.CHANGE_EMAIL_WITH_CHIP_DELIVERY_AND_ACTIVATION);
    public static final ErrorCode CHANGE_EMAIL_ACTIVATION_PENDENCY = new ErrorCode(MessageCodes.CHANGE_EMAIL_ACTIVATION_PENDENCY);
    public static final ErrorCode CHANGE_EMAIL_WITHOUT_CHIP_DELIVERY_AND_ACTIVATION_AND_LINE = new ErrorCode(MessageCodes.CHANGE_EMAIL_WITHOUT_CHIP_DELIVERY_AND_ACTIVATION_AND_LINE);
    public static final ErrorCode CREATE_NEW_PASSWORD_TOKEN_INVALID = new ErrorCode(MessageCodes.CREATE_NEW_PASSWORD_TOKEN_INVALID);
    public static final ErrorCode CHANGE_EMAIL_ALREADY_EXISTS = new ErrorCode(MessageCodes.CHANGE_EMAIL_ALREADY_EXISTS);
    public static final ErrorCode REFILL_IS_ALREADY_AUTO = new ErrorCode(MessageCodes.REFILL_IS_ALREADY_AUTO);
    public static final ErrorCode REFILL_IS_ALREADY_MANUAL = new ErrorCode(MessageCodes.REFILL_IS_ALREADY_MANUAL);
    public static final ErrorCode CHANGE_EMAIL_WITHOUT_SUBSCRIBER = new ErrorCode(MessageCodes.CHANGE_EMAIL_WITHOUT_SUBSCRIBER);
    public static final ErrorCode BILLING_INTERNAL_ERROR = new ErrorCode(MessageCodes.BILLING_INTERNAL_ERROR);
    public static final ErrorCode WITHOUT_LINE = new ErrorCode(MessageCodes.WITHOUT_LINE);
    public static final ErrorCode PASSWORD_PATTERN = new ErrorCode(MessageCodes.PASSWORD_PATTERN);
    public static final ErrorCode CONTACT_NOT_FOUND = new ErrorCode(MessageCodes.CONTACT_NOT_FOUND);
    public static final ErrorCode INVALID_COUPON = new ErrorCode(MessageCodes.INVALID_COUPON);
    public static final ErrorCode COUPON_CAN_NOT_BE_APPLIED = new ErrorCode(MessageCodes.COUPON_CAN_NOT_BE_APPLIED);
    public static final ErrorCode OFFER_ALREADY_INSTALLED = new ErrorCode(MessageCodes.OFFER_ALREADY_INSTALLED);
    public static final ErrorCode CUSTOM_PLAN_HAS_ACTIVE_CONTRACT = new ErrorCode(MessageCodes.CUSTOM_PLAN_HAS_ACTIVE_CONTRACT);
    public static final ErrorCode CITY_NOT_AVAILABLE_FOR_SHIPPING_CHIPS = new ErrorCode(MessageCodes.CITY_NOT_AVAILABLE_FOR_SHIPPING_CHIPS);
    public static final ErrorCode INVITATION_VERY_HAPPY_ALREADY_SENT_TO_THIS_EMAIL = new ErrorCode(MessageCodes.INVITATION_VERY_HAPPY_ALREADY_SENT_TO_THIS_EMAIL);
    public static final ErrorCode INVITATION_VERY_HAPPY_NEVER_SENT_TO_THIS_EMAIL = new ErrorCode(MessageCodes.INVITATION_VERY_HAPPY_NEVER_SENT_TO_THIS_EMAIL);
    public static final ErrorCode VERY_HAPPY_IS_NOT_AVAILABLE_IN_THIS_CITY = new ErrorCode(MessageCodes.VERY_HAPPY_IS_NOT_AVAILABLE_IN_THIS_CITY);
    public static final ErrorCode EMAIL_ON_QUEUE_VIP = new ErrorCode(MessageCodes.EMAIL_ON_QUEUE_VIP);
    public static final ErrorCode EMAIL_OR_CPF_ON_QUEUE_VIP = new ErrorCode(MessageCodes.EMAIL_OR_CPF_ON_QUEUE_VIP);
    public static final ErrorCode MAXIMUM_INVITATIONS_VERY_HAPPY = new ErrorCode(MessageCodes.MAXIMUM_INVITATIONS_VERY_HAPPY);
    public static final ErrorCode CUSTOMER_NOT_VERY_HAPPY = new ErrorCode(MessageCodes.CUSTOMER_NOT_VERY_HAPPY);
    public static final ErrorCode CUSTOMER_ALREADY_VERY_HAPPY = new ErrorCode(MessageCodes.CUSTOMER_ALREADY_VERY_HAPPY);
    public static final ErrorCode CUSTOMER_ALREADY_ELIGIBLE_VERY_HAPPY = new ErrorCode(MessageCodes.CUSTOMER_ALREADY_ELIGIBLE_VERY_HAPPY);
    public static final ErrorCode INVITATION_NOT_FOUND = new ErrorCode(MessageCodes.INVITATION_NOT_FOUND);
    public static final ErrorCode CHIP_REQUEST_NOT_FOUND = new ErrorCode(MessageCodes.CHIP_REQUEST_NOT_FOUND);
    public static final ErrorCode CHIP_REQUEST_NOT_CANCELLABLE = new ErrorCode(MessageCodes.CHIP_REQUEST_NOT_CANCELLABLE);
    public static final ErrorCode OFFER_CHIP_INVALID = new ErrorCode(MessageCodes.OFFER_CHIP_INVALID);
    public static final ErrorCode EMAIL_IS_NULL = new ErrorCode(MessageCodes.EMAIL_IS_NULL);
    public static final ErrorCode EMAIL_IS_BLANK = new ErrorCode(MessageCodes.EMAIL_IS_BLANK);
    public static final ErrorCode INVALID_EMAIL = new ErrorCode(MessageCodes.INVALID_EMAIL);
    public static final ErrorCode INVALID_LOGIN = new ErrorCode(MessageCodes.INVALID_LOGIN);
    public static final ErrorCode EMAIL_EXCHANGE_NOT_NULL = new ErrorCode(MessageCodes.EMAIL_EXCHANGE_NOT_NULL);
    public static final ErrorCode EMAIL_EXCHANGE_NOT_EMPTY = new ErrorCode(MessageCodes.EMAIL_EXCHANGE_NOT_EMPTY);
    public static final ErrorCode EMAIL_EXCHANGE_CONFIRMATION_NOT_NULL = new ErrorCode(MessageCodes.EMAIL_EXCHANGE_CONFIRMATION_NOT_NULL);
    public static final ErrorCode EMAIL_EXCHANGE_CONFIRMATION_NOT_EMPTY = new ErrorCode(MessageCodes.EMAIL_EXCHANGE_CONFIRMATION_NOT_EMPTY);
    public static final ErrorCode EMAIL_EXCHANGE_ALREADY_EXISTS = new ErrorCode(MessageCodes.EMAIL_EXCHANGE_ALREADY_EXISTS);
    public static final ErrorCode DIVERGENT_CONFIRMATION_EMAIL = new ErrorCode(MessageCodes.DIVERGENT_CONFIRMATION_EMAIL);
    public static final ErrorCode INVITATION_HEADER_NOT_FOUND = new ErrorCode(MessageCodes.INVITATION_HEADER_NOT_FOUND);
    public static final ErrorCode CREDENTIAL_NOT_FOUND = new ErrorCode(MessageCodes.CREDENTIAL_NOT_FOUND);
    public static final ErrorCode SUSPENDED_LINE = new ErrorCode(MessageCodes.SUSPENDED_LINE);
    public static final ErrorCode SUBSCRIBER_ALREADY_ACTIVED = new ErrorCode(MessageCodes.SUBSCRIBER_ALREADY_ACTIVED);
    public static final ErrorCode SUBSCRIBER_ALREADY_SUSPENDED = new ErrorCode(MessageCodes.SUBSCRIBER_ALREADY_SUSPENDED);
    public static final ErrorCode SUBSCRIBER_PENDING_ACTIVATION = new ErrorCode(MessageCodes.SUBSCRIBER_PENDING_ACTIVATION);
    public static final ErrorCode CREDENTIAL_ALREADY_VERY_HAPPY = new ErrorCode(MessageCodes.CREDENTIAL_ALREADY_VERY_HAPPY);
    public static final ErrorCode STATUS_CREDENTIAL_NOT_ALLOWED_TO_VERY_HAPPY = new ErrorCode(MessageCodes.STATUS_CREDENTIAL_NOT_ALLOWED_TO_VERY_HAPPY);
    public static final ErrorCode LINE_NOT_FROM_SUBSCRIBER = new ErrorCode(MessageCodes.LINE_NOT_FROM_SUBSCRIBER);
    public static final ErrorCode PAYMENT_BRASPAG_ERROR = new ErrorCode(MessageCodes.PAYMENT_BRASPAG_ERROR);
    public static final ErrorCode REASON_NOT_ALLOWED = new ErrorCode(MessageCodes.REASON_NOT_ALLOWED);
    public static final ErrorCode MAESTRO_ERROR = new ErrorCode(MessageCodes.MAESTRO_ERROR);
    public static final ErrorCode CHIP_REQUEST_LIST_NOT_FOUND = new ErrorCode(MessageCodes.CHIP_REQUEST_LIST_NOT_FOUND);
    public static final ErrorCode OFFER_NOT_AVAILABLE_FOR_CUSTOMER = new ErrorCode(MessageCodes.OFFER_NOT_AVAILABLE_FOR_CUSTOMER);
    public static final ErrorCode INVITATION_ALREADY_USED = new ErrorCode(MessageCodes.INVITATION_ALREADY_USED);
    public static final ErrorCode CATALOG_NOT_FOUND = new ErrorCode(MessageCodes.CATALOG_NOT_FOUND);
    public static final ErrorCode CATALOG_DOES_NOT_EXIST = new ErrorCode(MessageCodes.CATALOG_DOES_NOT_EXIST);
    public static final ErrorCode CATALOG_ITEM_NOT_FOUND = new ErrorCode(MessageCodes.CATALOG_ITEM_NOT_FOUND);
    public static final ErrorCode EMPTY_CATALOG_NAME = new ErrorCode(MessageCodes.EMPTY_CATALOG_NAME);
    public static final ErrorCode COMPOSITION_NOT_FOUND = new ErrorCode(MessageCodes.COMPOSITION_NOT_FOUND);
    public static final ErrorCode COMPONENT_NOT_FOUND = new ErrorCode(MessageCodes.COMPONENT_NOT_FOUND);
    public static final ErrorCode CATALOG_PLAN_NOT_FOUND = new ErrorCode(MessageCodes.CATALOG_PLAN_NOT_FOUND);
    public static final ErrorCode CATALOG_ADDON_NOT_FOUND = new ErrorCode(MessageCodes.CATALOG_ADDON_NOT_FOUND);
    public static final ErrorCode INVALID_OFFER_TYPE = new ErrorCode(MessageCodes.INVALID_OFFER_TYPE);
    public static final ErrorCode ORDER_NOT_FOUND = new ErrorCode(MessageCodes.ORDER_NOT_FOUND);
    public static final ErrorCode UNABLE_TO_CREATE_ACCOUNT = new ErrorCode(MessageCodes.UNABLE_TO_CREATE_ACCOUNT);
    public static final ErrorCode UNABLE_TO_UPDATE_ACCOUNT_AB = new ErrorCode(MessageCodes.UNABLE_TO_UPDATE_ACCOUNT_AB);
    public static final ErrorCode ERROR_TO_UPDATE_ACCOUNT_AB = new ErrorCode(MessageCodes.ERROR_TO_UPDATE_ACCOUNT_AB);
    public static final ErrorCode REFILL_NOT_FOUND = new ErrorCode(MessageCodes.REFILL_NOT_FOUND);
    public static final ErrorCode CHIP_ERROR_ACTIVATION = new ErrorCode(MessageCodes.CHIP_ERROR_ACTIVATION);
    public static final ErrorCode MANAGER_BALANCE_INSUFFICIENT = new ErrorCode(MessageCodes.MANAGER_BALANCE_INSUFFICIENT);
    public static final ErrorCode SOURCE_SUBSCRIBER_NOT_ACTIVED = new ErrorCode(MessageCodes.SOURCE_SUBSCRIBER_NOT_ACTIVED);
    public static final ErrorCode DESTINATION_SUBSCRIBER_NOT_ACTIVED = new ErrorCode(MessageCodes.DESTINATION_SUBSCRIBER_NOT_ACTIVED);
    public static final ErrorCode DESTINATION_NOT_IN_HIERARCHY = new ErrorCode(MessageCodes.DESTINATION_NOT_IN_HIERARCHY);
    public static final ErrorCode HIERARCHY_INVALID = new ErrorCode(MessageCodes.HIERARCHY_INVALID);
    public static final ErrorCode SOURCE_CONTRACT_NOT_ACTIVED = new ErrorCode(MessageCodes.SOURCE_CONTRACT_NOT_ACTIVED);
    public static final ErrorCode SWAPPER_ORDER_NOT_SAVED = new ErrorCode(MessageCodes.SWAPPER_ORDER_NOT_SAVED);
    public static final ErrorCode EASTER_EGG_NOT_FOUND = new ErrorCode(MessageCodes.EASTER_EGG_NOT_FOUND);
    public static final ErrorCode UNABLE_TO_CREATE_EASTER_EGG = new ErrorCode(MessageCodes.UNABLE_TO_CREATE_EASTER_EGG);
    public static final ErrorCode CUSTOMER_WITHOUT_LINE = new ErrorCode(MessageCodes.CUSTOMER_WITHOUT_LINE);
    public static final ErrorCode DOCUMENT_NOT_VALID_TO_MSISDN = new ErrorCode(MessageCodes.DOCUMENT_NOT_VALID_TO_MSISDN);
    public static final ErrorCode DOCUMENT_TYPE_NOT_ALLOWED = new ErrorCode(MessageCodes.DOCUMENT_TYPE_NOT_ALLOWED);
    public static final ErrorCode ABRT_ERROR = new ErrorCode(MessageCodes.ABRT_ERROR);
    public static final ErrorCode ZENDESK_ENABLE = new ErrorCode(MessageCodes.ZENDESK_ENABLE);
    public static final ErrorCode DEPENDENT_NOT_FOUND = new ErrorCode(MessageCodes.DEPENDENT_NOT_FOUND);
    public static final ErrorCode MANAGER_NOT_FOUND = new ErrorCode(MessageCodes.MANAGER_NOT_FOUND);
    public static final ErrorCode DEPENDENT_NOT_FROM_MANAGER = new ErrorCode(MessageCodes.DEPENDENT_NOT_FROM_MANAGER);
    public static final ErrorCode OFFER_NOT_FOUND = new ErrorCode(MessageCodes.OFFER_NOT_FOUND);
    public static final ErrorCode DEPENDENT_ALREADY_EXISTS = new ErrorCode(MessageCodes.DEPENDENT_ALREADY_EXISTS);
    public static final ErrorCode MSISDN_LENGTH_INVALID = new ErrorCode(MessageCodes.MSISDN_LENGTH_INVALID);
    public static final ErrorCode MSISDN_MUST_BE_NUMERIC = new ErrorCode(MessageCodes.MSISDN_MUST_BE_NUMERIC);
    public static final ErrorCode CEP_IS_NULL = new ErrorCode(MessageCodes.CEP_IS_NULL);
    public static final ErrorCode DDD_INVALID = new ErrorCode(MessageCodes.DDD_INVALID);
    public static final ErrorCode FIELDS_VALIDATION_INVALID = new ErrorCode(MessageCodes.FIELDS_VALIDATION_INVALID);
    public static final ErrorCode CUSTOMERID_IS_NECESSARY = new ErrorCode(MessageCodes.CUSTOMERID_IS_NECESSARY);
    public static final ErrorCode NOT_FOUND_PORTABILITY = new ErrorCode(MessageCodes.NOT_FOUND_PORTABILITY);
    public static final ErrorCode NUMBER_IS_NEGATIVE = new ErrorCode(MessageCodes.NUMBER_IS_NEGATIVE);
    public static final ErrorCode INVALID_TOKEN_URA = new ErrorCode(MessageCodes.INVALID_TOKEN_URA);
    public static final ErrorCode LINE_NOT_FOUND_URA = new ErrorCode(MessageCodes.LINE_NOT_FOUND_URA);
    public static final ErrorCode FLOW_PRE_NOT_ALLOWED = new ErrorCode(MessageCodes.FLOW_PRE_NOT_ALLOWED);
    public static final ErrorCode DSP_BSCS_INVALID_ICCID = new ErrorCode(MessageCodes.DSP_BSCS_INVALID_ICCID);

    public static final ErrorCode INVALID_BIRTHDATE = new ErrorCode(MessageCodes.INVALID_BIRTHDATE);

    public static final ErrorCode ERROR_GENERATION_PASSWOR_RESET_LINK = new ErrorCode(MessageCodes.ERROR_GENERATION_PASSWOR_RESET_LINK);

    private ErrorCodesMessage() {
        throw new IllegalStateException("Utility class");
    }
}
